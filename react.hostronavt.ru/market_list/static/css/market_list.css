@font-face {
  font-family: "YesEva";
  src: url(fonts/yeseva.ttf);
}
@font-face {
  font-family: "Futurabookc";
  src: url("fonts/Futurabookc.otf");
}
@font-face {
  font-family: "StyloBold";
  src: url("fonts/stylo-bold.ttf");
}
*,
*::before,
*::after {
  box-sizing: border-box;
}
html {
  font-family: sans-serif;
  line-height: 1.15;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -ms-overflow-style: scrollbar;
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
}
@-ms-viewport {
  width: device-width;
}
article,
aside,
figcaption,
figure,
footer,
header,
hgroup,
main,
nav,
section {
  display: block;
}
body {
  margin: 0;
  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
  font-size: 1rem;
  font-weight: 400;
  line-height: 1.5;
  color: #212529;
  text-align: left;
  background-color: #fff;
}
[tabindex="-1"]:focus {
  outline: 0 !important;
}
hr {
  box-sizing: content-box;
  height: 0;
  overflow: visible;
}
h1,
h2,
h3,
h4,
h5,
h6 {
  margin-top: 0;
  margin-bottom: 0.5rem;
}
p {
  margin-top: 0;
  margin-bottom: 1rem;
}
abbr[title],
abbr[data-original-title] {
  text-decoration: underline;
  -webkit-text-decoration: underline dotted;
  text-decoration: underline dotted;
  cursor: help;
  border-bottom: 0;
}
address {
  margin-bottom: 1rem;
  font-style: normal;
  line-height: inherit;
}
ol,
ul,
dl {
  margin-top: 0;
  margin-bottom: 1rem;
}
ol ol,
ul ul,
ol ul,
ul ol {
  margin-bottom: 0;
}
dt {
  font-weight: 700;
}
dd {
  margin-bottom: 0.5rem;
  margin-left: 0;
}
blockquote {
  margin: 0 0 1rem;
}
dfn {
  font-style: italic;
}
b,
strong {
  font-weight: bolder;
}
small {
  font-size: 80%;
}
sub,
sup {
  position: relative;
  font-size: 75%;
  line-height: 0;
  vertical-align: baseline;
}
sub {
  bottom: -0.25em;
}
sup {
  top: -0.5em;
}
a {
  color: #e3b873;
  text-decoration: none;
  background-color: transparent;
  -webkit-text-decoration-skip: objects;
}
a:hover {
  color: #0056b3;
  text-decoration: underline;
}
a:not([href]):not([tabindex]) {
  color: inherit;
  text-decoration: none;
}
a:not([href]):not([tabindex]):hover,
a:not([href]):not([tabindex]):focus {
  color: inherit;
  text-decoration: none;
}
a:not([href]):not([tabindex]):focus {
  outline: 0;
}
#market-list {
  width: 100%;
  height: auto;
  padding-right: calc(50vw - 647px);
  padding-left: calc(50vw - 647px);
  box-sizing: border-box;
  display: grid;
  grid-template-columns: 50%;
  grid-template-rows: auto;
  grid-row-gap: 0;
  grid-column-gap: 0;
}
@media (max-width: 1024px) {
  #market-list {
    padding-left: 30px;
    padding-right: 30px;
  }
}
.market-list {
  background-color: antiquewhite;
  padding: 1em;
}
.market-list__item {
  box-shadow: 3px 3px 6px gray;
  padding: 1em;
  background-color: white;
  display: grid;
  grid-template-columns: 10% 1fr 1fr 20%;
  grid-template-rows: auto;
  grid-row-gap: 0;
  grid-column-gap: 0;
}
.market-list__item__title {
  grid-column: span 2;
}
.market-list__item__img {
  justify-self: stretch;
  align-self: stretch;
  grid-row-start: 1;
  grid-row-end: 3;
  grid-column-start: 4;
  background-color: #131313;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
